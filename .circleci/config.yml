# .circleci/config.yml
version: 2.1
orbs:
  codecov: codecov/codecov@3.2.2

jobs:
  install-dependencies:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Resolve Dependencies
          command: ./gradlew resolveDependencies
      - save_cache:
          key: cache-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
          paths:
            - ~/.gradle/caches/modules-2/files-2.1
            - .gradle

  build-application:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Gradle Build
          command: ./gradlew build -x test
      #      # Cache build deps until build.gradle changes
      #      - save_cache:
      #          key: cache-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      #          paths:
      #            - ~/.gradle/caches/modules-2/files-2.1
      - store_artifacts:
          path: build/libs/*.jar
          name: app.jar

  test:
    docker:
      - image: cimg/openjdk:17.0
    parallelism: 8
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Split Tests
          command: circleci tests glob "src/test/**/*.java" | circleci tests split --split-by=timings | xargs -n 1 echo
      - run:
          name: Test Application
          command: ./gradlew test -i -PtestFilter="`circleci tests glob "src/test/**/*.java" | circleci tests split --split-by=timings`"
      - run:
          name: Consolidate Test Results
          command: cp build/reports/jacoco/all-tests/jacocoAllTests.xml build/test-results/test/jacocoAllTests.xml
      - store_test_results:
          path: build/test-results/test
      - store_artifacts:
          path: build/reports/jacoco/html

  integration-test:
    machine:
      image: ubuntu-2004:202008-01
    parallelism: 2
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Split Tests by Runtime
          command: circleci tests glob "src/integrationTest/**/*.java" | circleci tests split --split-by=timings | xargs -n 1 echo
      - run:
          name: Start Docker Daemon
          command: sudo systemctl start docker
      - run:
          name: Java Version Check
          command: java --version
      - run:
          name: Run Integration Tests
          command: ./gradlew integrationTest -PtestFilter="`circleci tests glob "src/integrationTest/**/*.java" | circleci tests split --split-by=timings`"
      - store_test_results:
          path: build/test-results/integrationTest

  store-built-application:
    docker:
      - image: cimg/openjdk:17.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - cache-{{ .Branch }}-{{ checksum "build.gradle" }}-{{ checksum "gradle.properties" }}
      - run:
          name: Build Application
          command: ./gradlew jar
      - store_artifacts:
          path: build/libs/*.jar
          name: app.jar

workflows:
  build:
    jobs:
      - install-dependencies
      - build-application:
          requires:
            - install-dependencies
      - test:
          requires:
            - install-dependencies
          post-steps:
            - codecov/upload
      - integration-test:
          requires:
            - install-dependencies
          filters:
            branches:
              only:
                - main
#       - store-built-application:
#           requires:
#             - test
#             - build-application
# #            - integration-test
#           filters:
#             branches:
#               only:
#                 - main
