plugins {
	id 'org.springframework.boot' version '2.6.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id "io.freefair.lombok" version "6.3.0"
}

group = 'com.teddycrane'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
  	implementation 'com.google.code.gson:gson:2.8.9'
  	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'
	implementation 'com.github.javafaker:javafaker:1.0.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
}

test {
	useJUnitPlatform()
	testLogging {
		events "PASSED", "SKIPPED", "FAILED"
	}
	finalizedBy jacocoTestReport // always generate test reports
}

jacocoTestReport {
	dependsOn test // require test run before report generation 
	executionData tasks.withType(Test).findAll { it.state.executed }

	reports {
		xml.enabled true
		xml.destination(file("${jacoco.reportsDir}/all-tests/jacocoAllTests.xml"))
		html.enabled true
		html.destination(file("${jacoco.reportsDir}/html"))
	}
}
